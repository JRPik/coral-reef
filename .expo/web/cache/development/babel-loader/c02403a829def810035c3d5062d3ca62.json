{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createDrawerNavigator } from \"react-navigation-drawer\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport AppLoading from \"expo-app-loading\";\nimport { useFonts, RobotoCondensed_400Regular } from \"@expo-google-fonts/dev\";\nimport NewEntry from \"../app/screens/newEntry\";\nimport EntrySearch from \"../app/screens/entrySearch\";\nimport CoralEntries from \"../app/screens/coralEntries\";\nimport { InStack } from \"./inStack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screens = {\n  Home: {\n    screen: InStack,\n    navigationOptions: function navigationOptions(_ref) {\n      var navigation = _ref.navigation;\n      return {\n        title: \"Thing\"\n      };\n    }\n  },\n  NewEntry: {\n    screen: NewEntry,\n    navigationOptions: function navigationOptions(_ref2) {\n      var navigation = _ref2.navigation;\n      return {\n        title: \"New Entry\"\n      };\n    }\n  },\n  EntrySearch: {\n    screen: EntrySearch,\n    navigationOptions: function navigationOptions(_ref3) {\n      var navigation = _ref3.navigation;\n      return {\n        title: \"Entry Search\"\n      };\n    }\n  },\n  CoralEntries: {\n    screen: CoralEntries,\n    navigationOptions: function navigationOptions(_ref4) {\n      var navigation = _ref4.navigation;\n      return {\n        title: \"Coral Entries\"\n      };\n    }\n  }\n};\nvar Drawer = createDrawerNavigator(screens, {\n  drawerPosition: \"right\",\n  contentComponent: DrawerMenu\n});\nvar menuData = [{\n  icon: \"home\",\n  name: \"Home\",\n  screenName: \"Home\",\n  key: 1\n}, {\n  icon: \"book\",\n  name: \" New Entry\",\n  screenName: \"NewEntry\",\n  key: 2\n}, {\n  icon: \"search\",\n  name: \"Entry Search\",\n  screenName: \"EntrySearch\",\n  key: 3\n}, {\n  icon: \"folder-open\",\n  name: \"Coral Entries\",\n  screenName: \"CoralEntries\",\n  key: 4\n}, {\n  icon: \"sign-out\",\n  name: \"Log Out\",\n  key: 5\n}];\n\nfunction DrawerMenu(_ref5) {\n  var navigation = _ref5.navigation;\n\n  var _useFonts = useFonts({\n    RobotoCondensed_400Regular: RobotoCondensed_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  } else {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(FlatList, {\n        data: menuData,\n        renderItem: function renderItem(_ref6) {\n          var item = _ref6.item;\n          return _jsx(DrawerItem, {\n            navigation: navigation,\n            icon: item.icon,\n            screenName: item.screenName,\n            name: item.name\n          }, item.key);\n        }\n      })\n    });\n  }\n}\n\nfunction DrawerItem(_ref7) {\n  var navigation = _ref7.navigation,\n      name = _ref7.name,\n      screenName = _ref7.screenName,\n      icon = _ref7.icon;\n\n  var navHandler = function navHandler(screenName, name) {\n    if (name === \"Log Out\") {\n      navigation.navigate(\"Login\");\n    } else {\n      navigation.navigate(screenName);\n    }\n  };\n\n  return _jsxs(TouchableOpacity, {\n    style: styles.menuItem,\n    onPress: function onPress() {\n      return navHandler(screenName, name);\n    },\n    children: [_jsx(Icon, {\n      style: styles.icon,\n      name: icon,\n      size: 25,\n      color: \"#333\"\n    }), _jsx(Text, {\n      style: styles.menuItemText,\n      children: name\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"rgba(255,255,255,0.43)\",\n    paddingTop: 70\n  },\n  icon: {\n    paddingTop: 10,\n    paddingLeft: 5\n  },\n  menuItem: {\n    flexDirection: \"row\",\n    borderStyle: \"solid\",\n    borderBottomWidth: 2,\n    borderBottomColor: \"black\"\n  },\n  menuItemText: {\n    fontSize: 15,\n    fontWeight: \"300\",\n    margin: 15,\n    fontFamily: \"RobotoCondensed_400Regular\"\n  }\n});\nexport default Drawer;","map":{"version":3,"sources":["C:/Users/ajrow/OneDrive/react-app/coral-reef/routes/drawer.js"],"names":["createDrawerNavigator","Icon","AppLoading","useFonts","RobotoCondensed_400Regular","NewEntry","EntrySearch","CoralEntries","InStack","screens","Home","screen","navigationOptions","navigation","title","Drawer","drawerPosition","contentComponent","DrawerMenu","menuData","icon","name","screenName","key","fontsLoaded","styles","container","item","DrawerItem","navHandler","navigate","menuItem","menuItemText","StyleSheet","create","flex","backgroundColor","paddingTop","paddingLeft","flexDirection","borderStyle","borderBottomWidth","borderBottomColor","fontSize","fontWeight","margin","fontFamily"],"mappings":";AACA,SAASA,qBAAT,QAAsC,yBAAtC;;;;;;AAEA,OAAOC,IAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,QAAT,EAAmBC,0BAAnB,QAAqD,wBAArD;AAGA,OAAOC,QAAP;AACA,OAAOC,WAAP;AACA,OAAOC,YAAP;AACA,SAASC,OAAT;;;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAEH,OADJ;AAEJI,IAAAA,iBAAiB,EAAE,iCAAoB;AAAA,UAAjBC,UAAiB,QAAjBA,UAAiB;AACrC,aAAO;AACLC,QAAAA,KAAK,EAAE;AADF,OAAP;AAGD;AANG,GADQ;AASdT,EAAAA,QAAQ,EAAE;AACRM,IAAAA,MAAM,EAAEN,QADA;AAERO,IAAAA,iBAAiB,EAAE,kCAAoB;AAAA,UAAjBC,UAAiB,SAAjBA,UAAiB;AACrC,aAAO;AACLC,QAAAA,KAAK,EAAE;AADF,OAAP;AAGD;AANO,GATI;AAiBdR,EAAAA,WAAW,EAAE;AACXK,IAAAA,MAAM,EAAEL,WADG;AAEXM,IAAAA,iBAAiB,EAAE,kCAAoB;AAAA,UAAjBC,UAAiB,SAAjBA,UAAiB;AACrC,aAAO;AACLC,QAAAA,KAAK,EAAE;AADF,OAAP;AAGD;AANU,GAjBC;AAyBdP,EAAAA,YAAY,EAAE;AACZI,IAAAA,MAAM,EAAEJ,YADI;AAEZK,IAAAA,iBAAiB,EAAE,kCAAoB;AAAA,UAAjBC,UAAiB,SAAjBA,UAAiB;AACrC,aAAO;AACLC,QAAAA,KAAK,EAAE;AADF,OAAP;AAGD;AANW;AAzBA,CAAhB;AAmCA,IAAMC,MAAM,GAAGf,qBAAqB,CAACS,OAAD,EAAU;AAC5CO,EAAAA,cAAc,EAAE,OAD4B;AAE5CC,EAAAA,gBAAgB,EAAEC;AAF0B,CAAV,CAApC;AAKA,IAAMC,QAAQ,GAAG,CACf;AAAEC,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE,MAAtB;AAA8BC,EAAAA,UAAU,EAAE,MAA1C;AAAkDC,EAAAA,GAAG,EAAE;AAAvD,CADe,EAEf;AAAEH,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE,YAAtB;AAAoCC,EAAAA,UAAU,EAAE,UAAhD;AAA4DC,EAAAA,GAAG,EAAE;AAAjE,CAFe,EAGf;AAAEH,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE,cAAxB;AAAwCC,EAAAA,UAAU,EAAE,aAApD;AAAmEC,EAAAA,GAAG,EAAE;AAAxE,CAHe,EAIf;AAAEH,EAAAA,IAAI,EAAE,aAAR;AAAuBC,EAAAA,IAAI,EAAE,eAA7B;AAA8CC,EAAAA,UAAU,EAAE,cAA1D;AAA0EC,EAAAA,GAAG,EAAE;AAA/E,CAJe,EAKf;AAAEH,EAAAA,IAAI,EAAE,UAAR;AAAoBC,EAAAA,IAAI,EAAE,SAA1B;AAAqCE,EAAAA,GAAG,EAAE;AAA1C,CALe,CAAjB;;AAQA,SAASL,UAAT,QAAoC;AAAA,MAAdL,UAAc,SAAdA,UAAc;;AAClC,kBAAoBV,QAAQ,CAAC;AAC3BC,IAAAA,0BAA0B,EAA1BA;AAD2B,GAAD,CAA5B;AAAA;AAAA,MAAKoB,WAAL;;AAIA,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAO,KAAC,UAAD,KAAP;AACD,GAFD,MAEO;AACL,WACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,gBACE,KAAC,QAAD;AACE,QAAA,IAAI,EAAEP,QADR;AAEE,QAAA,UAAU,EAAE;AAAA,cAAGQ,IAAH,SAAGA,IAAH;AAAA,iBACV,KAAC,UAAD;AACE,YAAA,UAAU,EAAEd,UADd;AAEE,YAAA,IAAI,EAAEc,IAAI,CAACP,IAFb;AAGE,YAAA,UAAU,EAAEO,IAAI,CAACL,UAHnB;AAIE,YAAA,IAAI,EAAEK,IAAI,CAACN;AAJb,aAKOM,IAAI,CAACJ,GALZ,CADU;AAAA;AAFd;AADF,MADF;AAgBD;AACF;;AACD,SAASK,UAAT,QAA4D;AAAA,MAAtCf,UAAsC,SAAtCA,UAAsC;AAAA,MAA1BQ,IAA0B,SAA1BA,IAA0B;AAAA,MAApBC,UAAoB,SAApBA,UAAoB;AAAA,MAARF,IAAQ,SAARA,IAAQ;;AAC1D,MAAMS,UAAU,GAAG,SAAbA,UAAa,CAACP,UAAD,EAAaD,IAAb,EAAsB;AACvC,QAAIA,IAAI,KAAK,SAAb,EAAwB;AACtBR,MAAAA,UAAU,CAACiB,QAAX,CAAoB,OAApB;AACD,KAFD,MAEO;AACLjB,MAAAA,UAAU,CAACiB,QAAX,CAAoBR,UAApB;AACD;AACF,GAND;;AAOA,SACE,MAAC,gBAAD;AACE,IAAA,KAAK,EAAEG,MAAM,CAACM,QADhB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMF,UAAU,CAACP,UAAD,EAAaD,IAAb,CAAhB;AAAA,KAFX;AAAA,eAIE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEI,MAAM,CAACL,IAApB;AAA0B,MAAA,IAAI,EAAEA,IAAhC;AAAsC,MAAA,IAAI,EAAE,EAA5C;AAAgD,MAAA,KAAK,EAAC;AAAtD,MAJF,EAKE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEK,MAAM,CAACO,YAApB;AAAA,gBAAmCX;AAAnC,MALF;AAAA,IADF;AASD;;AAED,IAAMI,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,wBAFR;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAM/BjB,EAAAA,IAAI,EAAE;AACJiB,IAAAA,UAAU,EAAE,EADR;AAEJC,IAAAA,WAAW,EAAE;AAFT,GANyB;AAU/BP,EAAAA,QAAQ,EAAE;AACRQ,IAAAA,aAAa,EAAE,KADP;AAERC,IAAAA,WAAW,EAAE,OAFL;AAGRC,IAAAA,iBAAiB,EAAE,CAHX;AAIRC,IAAAA,iBAAiB,EAAE;AAJX,GAVqB;AAgB/BV,EAAAA,YAAY,EAAE;AACZW,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,UAAU,EAAE,KAFA;AAGZC,IAAAA,MAAM,EAAE,EAHI;AAIZC,IAAAA,UAAU,EAAE;AAJA;AAhBiB,CAAlB,CAAf;AAwBA,eAAe/B,MAAf","sourcesContent":["//imports from our third-parties\r\nimport { createDrawerNavigator } from \"react-navigation-drawer\";\r\nimport { StyleSheet, Text, View, TouchableOpacity, FlatList } from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport { useFonts, RobotoCondensed_400Regular } from \"@expo-google-fonts/dev\";\r\n\r\n//imports from our code\r\nimport NewEntry from \"../app/screens/newEntry\";\r\nimport EntrySearch from \"../app/screens/entrySearch\";\r\nimport CoralEntries from \"../app/screens/coralEntries\";\r\nimport { InStack } from \"./inStack\";\r\n\r\nconst screens = {\r\n  Home: {\r\n    screen: InStack,\r\n    navigationOptions: ({ navigation }) => {\r\n      return {\r\n        title: \"Thing\",\r\n      };\r\n    },\r\n  },\r\n  NewEntry: {\r\n    screen: NewEntry,\r\n    navigationOptions: ({ navigation }) => {\r\n      return {\r\n        title: \"New Entry\",\r\n      };\r\n    },\r\n  },\r\n  EntrySearch: {\r\n    screen: EntrySearch,\r\n    navigationOptions: ({ navigation }) => {\r\n      return {\r\n        title: \"Entry Search\",\r\n      };\r\n    },\r\n  },\r\n  CoralEntries: {\r\n    screen: CoralEntries,\r\n    navigationOptions: ({ navigation }) => {\r\n      return {\r\n        title: \"Coral Entries\",\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\nconst Drawer = createDrawerNavigator(screens, {\r\n  drawerPosition: \"right\",\r\n  contentComponent: DrawerMenu,\r\n});\r\n\r\nconst menuData = [\r\n  { icon: \"home\", name: \"Home\", screenName: \"Home\", key: 1 },\r\n  { icon: \"book\", name: \" New Entry\", screenName: \"NewEntry\", key: 2 },\r\n  { icon: \"search\", name: \"Entry Search\", screenName: \"EntrySearch\", key: 3 },\r\n  { icon: \"folder-open\", name: \"Coral Entries\", screenName: \"CoralEntries\", key: 4 },\r\n  { icon: \"sign-out\", name: \"Log Out\", key: 5 },\r\n];\r\n\r\nfunction DrawerMenu({ navigation }) {\r\n  let [fontsLoaded] = useFonts({\r\n    RobotoCondensed_400Regular,\r\n  });\r\n\r\n  if (!fontsLoaded) {\r\n    return <AppLoading />;\r\n  } else {\r\n    return (\r\n      <View style={styles.container}>\r\n        <FlatList\r\n          data={menuData}\r\n          renderItem={({ item }) => (\r\n            <DrawerItem\r\n              navigation={navigation}\r\n              icon={item.icon}\r\n              screenName={item.screenName}\r\n              name={item.name}\r\n              key={item.key}\r\n            />\r\n          )}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\nfunction DrawerItem({ navigation, name, screenName, icon }) {\r\n  const navHandler = (screenName, name) => {\r\n    if (name === \"Log Out\") {\r\n      navigation.navigate(\"Login\");\r\n    } else {\r\n      navigation.navigate(screenName);\r\n    }\r\n  };\r\n  return (\r\n    <TouchableOpacity\r\n      style={styles.menuItem}\r\n      onPress={() => navHandler(screenName, name)}\r\n    >\r\n      <Icon style={styles.icon} name={icon} size={25} color=\"#333\" />\r\n      <Text style={styles.menuItemText}>{name}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(255,255,255,0.43)\",\r\n    paddingTop: 70,\r\n  },\r\n  icon: {\r\n    paddingTop: 10,\r\n    paddingLeft: 5,\r\n  },\r\n  menuItem: {\r\n    flexDirection: \"row\",\r\n    borderStyle: \"solid\",\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: \"black\",\r\n  },\r\n  menuItemText: {\r\n    fontSize: 15,\r\n    fontWeight: \"300\",\r\n    margin: 15,\r\n    fontFamily: \"RobotoCondensed_400Regular\",\r\n  },\r\n});\r\n\r\nexport default Drawer;\r\n"]},"metadata":{},"sourceType":"module"}